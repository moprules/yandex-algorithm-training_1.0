"""
B. Сумма номеров

Вася очень любит везде искать своё счастливое число K. Каждый день он ходит
в школу по улице, вдоль которой припарковано N машин. Он заинтересовался
вопросом, сколько существует наборов машин, стоящих подряд на местах
с L до R, что сумма их номеров равна K. Помогите Васе узнать ответ на его вопрос.

Например, если число N=5, K=17, а номера машин равны 17, 7, 10, 7, 10,
то существует 4 набора машин:
    17    (L=1,R=1)
    7, 10 (L=2,R=3)
    10, 7 (L=3,R=4)
    7, 10 (L=4,R=5)

Формат вывода
В первой строке входных данных задаются числа N и K (1 <= N <= 100000, 1<=K<=10^9).
Во второй строке содержится N чисел, задающих номера машин. Номера машин могут
принимать значения от 1 до 999 включительно.

Формат вывода
Необходимо вывести одно число — количество наборов.

Пример 1
Ввод
5 17
17 7 10 7 10
Вывод
4

Пример 2
5 10
1 2 3 4 1
Вывод
2
"""


def input_data():
    n, k = map(int, input().split())
    mas = [int(num) for num in input().split()]
    return n, k, mas


def solve(n, k, mas):
    # левый указатель
    left = 0
    # сумма текущего набора чисел
    cur_sum = 0
    # количество наборов, сумма чисел внутри которых = k
    cnt = 0
    # перебираем все числа в массиве
    for right, num in enumerate(mas):
        # увеличиваем сумму внутри набора
        # и тем самым двигаем правй указатель
        cur_sum += num

        # может быть так, что добавив число в диапазон
        # сумма этого диапазона станет больше k
        while cur_sum > k:
            # тогда двигаем левую границу
            # из суммы диапазона вычитаем левый элемент
            cur_sum -= mas[left]
            # и самым левым в диапазоне становиться
            # следующий элемент
            left += 1
        # проверям если на текущем шаге сумма равна k
        if cur_sum == k:
            # увеличиваем счётчик диапазонов
            cnt += 1

    # возвращаем результат - количество диапазонов
    return cnt


if __name__ == "__main__":
    n, k, mas = input_data()
    res = solve(n, k, mas)
    print(res)
