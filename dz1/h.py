"""
На некоторых кросс-платформенных станциях метро (как, например, «Третьяковская»)
на разные стороны платформы приходят поезда разных направлений. Таня договорилась
встретиться с подругой на такой станции, но поскольку подруга приехала из другого
часового пояса, то из-за джетлага сильно проспала, и Тане пришлось долго её ждать.
Поезда всегда ходят точно по расписанию, и Таня знает, что поезд стоит на платформе
ровно одну минуту, а интервал между поездами (время, в течение которого поезда у
платформы нет)составляет a минут для поездов на первом пути и b минут для поездов
на втором пути. То есть на первый путь приезжает поезд и стоит одну минуту, затем
в течение a минут поезда у платформы нет, затем в течение одной минуты у платформы
стоит следующий поезд и т. д.

Пока Таня стояла на платформе, она насчитала n поездов на первом пути и m поездов
на втором пути. Определите минимальное и максимальное время, которое Таня могла
провести на платформе, или сообщите, что она точно сбилась со счёта.

Все поезда, которые видела Таня, она наблюдала в течение всей минуты,
то есть Таня не приходит и не уходит с платформы посередине той минуты,
когда поезд стоит на платформе.

Формат ввода
Первая строка входных данных содержит число a — интервал между поездами на первом
пути. Вторая строка содержит число b — интервал между поездами на втором пути.
Третья строка содержит число n — количество поездов на первом пути, которые увидела
Таня. Четвёртая строка содержит число m — количество поездов на втором пути, которые
увидела Таня. Все числа — целые, от 1 до 1000.

Формат вывода
Программа должна вывести два числа: минимальное и максимальное время в минутах,
которое Таня могла стоять на платформе, или одно число -1, если Таня точно ошиблась.
"""


def input_data():
    a = int(input())
    b = int(input())
    n = int(input())
    m = int(input())

    return a, b, n, m


def make_times(cnt: int, space: int):
    """Сгенерировать массив времен, которое ждёт Таня

    Args:
        cnt (int): количество увиденных поездов
        space (int): интервал поездов

    Returns:
        (low, up): минимальное и максимальное время ожидния на платформе
    """
    # среднее время простоя
    sred = cnt * (1 + space)
    # нижняя граница времени ожидпния на платформе
    low = sred - space
    # верхняя граница
    up = sred + space
    # первый элемент минимальное время
    # последний элемент максимально возможное время
    return low, up


def work(a, b, n, m):
    # Отрезки времени ля первой платформы
    low1, up1 = make_times(n, a)
    # отрежки времени для второй платформы
    low2, up2 = make_times(m, b)
    # Общее минимальное время на платформе
    low = max(low1, low2)
    # Общее максимальное время на
    up = min(up1, up2)
    # Если нижняя граница больше берхней, то Таня точно ошиблась
    if low > up:
        return [-1]
    else:
        # иначе возвращаем минимальное и максимальное время в минутах,
        # которые Таня стояла на платформе
        return low, up


if __name__ == "__main__":
    a, b, n, m = input_data()
    res = work(a, b, n, m)
    print(*res)
