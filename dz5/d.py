"""
D. Город Че

В центре города Че есть пешеходная улица - одно из самых популярных мест для
прогулок жителей города. По этой улице очень приятно гулять, ведь вдоль улицы
расположено n забавных памятников.
Девочке Маше из города Че нравятся два мальчика из ее школы, и она никак
не может сделать выбор между ними. Чтобы принять окончательное решение,
она решила назначить обоим мальчикам свидание в одно и то же время.
Маша хочет выбрать два памятника на пешеходной улице, около которых мальчики
будут ее ждать. При этом она хочет выбрать такие памятники, чтобы мальчики
не увидели друг друга. Маша знает, что из-за тумана мальчики увидят друг
друга только в том случае, если они будут на расстоянии не более r метров.
Маше заинтересовалась, а сколько способов есть выбрать два различных памятника
для организации свиданий.

Формат ввода
В первой строке входного файла находятся два целых числа n и r
(2 <= n <= 300000, 1 <= r <= 10^9) - количество памятников и максимальное
расстояние, на котором мальчики могут увидеть друг друга.
Во второй строке задано n положительных чисел d1, …, dn,
где di - расстояние от i-го памятника до начала улицы. Все памятники находятся
на разном расстоянии от начала улицы. Памятники приведены в порядке возрастания
расстояния от начала улицы (1 <= d1, d2, ..., dn <= 10^9).

Формат вывода
Выведите одно число - число способов выбрать два памятника для организации
свиданий.

Пример
Ввод
4 4
1 3 5 8
Вывод
2

Примечания
В приведенном примере Маша может выбрать памятники 1 и 4 или памятники 2 и 4.
"""


def input_data():
    n, r = map(int, input().split())
    d = [int(x) for x in input().split()]
    return n, d, r


def solve(n, d, r):
    # правый указатель сразу ставим на 1 дальше левого
    # можем так сделать так как n >= 2
    right = 1
    # количество вариантов выбора столбов
    cnt = 0
    # левый указатель двигаем от начала массива до предпоследнего элемента
    for left in range(n-1):
        # правый указатель двигаем до тех пор пока не выйдем за пределы массива
        # или расстояние между столбами не сатнет достаточным
        while right < n and d[right] - d[left] <= r:
            right += 1

        # если правый указатель вышел за пределы массива
        if right >= n:
            # Выходим из главного цикла
            # Перебирать другие элементы не имеет смысла
            break

        # Увеличиваем счётчик расстановки столбов
        # так как массив столбов d отсортирован по возрастанию
        # все остальные столбы правее правого уже по умолчанию будут
        # дальше расстония r
        cnt += n - right

    return cnt


if __name__ == "__main__":
    n, d, r = input_data()
    res = solve(n, d, r)
    print(res)
