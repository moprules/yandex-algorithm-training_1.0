"""
F. Кондиционеры

При реализации проекта «Умная школа» было решено в каждый учебный класс
выбранной для этого школы установить по кондиционеру нового поколения для
автоматического охлаждения и вентиляции воздуха. По проекту в каждом классе
должен быть установлен только один кондиционер и мощность кондиционера должна
быть достаточной для размеров класса. Чем больше класс, тем мощнее должен быть
кондиционер.
Все классы школы пронумерованы последовательно от 1 до n. Известно,
что для каждого класса с номером i, требуется ровно один кондиционер,
мощность которого больше или равна ai ватт.
Администрации школы предоставили список из m различных моделей кондиционеров,
которые можно закупить. Для каждой модели кондиционера известна его мощность
и стоимость. Требуется написать программу, которая определит, за какую
минимальную суммарную стоимость кондиционеров можно оснастить все классы школы.

Формат ввода
Первая строка входного файла содержит одно целое число n (1 <= n <= 50 000)
    количество классов в школе.
Вторая строка содержит n целых чисел ai (1 <= ai <= 1000) — минимальная мощность
    кондиционера в ваттах, который можно установить в классе с номером i.
Третья строка содержит одно целое число m (1 <= m <= 50 000) — количество
    предложенных моделей кондиционеров.
Далее, в каждой из m строк содержится пара целых чисел bj и cj
    (1 <= bj <= 1000, 1 <= cj <= 1000) мощность в ваттах j-й модели кондиционера и его
    цена в рублях соответственно.

Формат вывода
Выходной файл должен содержать одно число минимальную суммарную стоимость
кондиционеров в рублях. Гарантируется, что хотя бы один корректный выбор
кондиционеров существует, и во всех классах можно установить подходящий
кондиционер.

Пример 1
Ввод
1
800
1
800 1000
Вывод
1000

Пример 2
Ввод
3
1 2 3
4
1 10
1 5
10 7
2 3
Вывод
13

Примечания
В первом примере нужно купить один единственно возможный кондиционер
    за 1000 рублей.
Во втором примере оптимально будет установить в первом и втором классах
    кондиционеры четвертого типа, а в третьем классе – кондиционер
    третьеготипа. Суммарная стоимость этих кондиционеров будет
    составлять 13 рублей (3 + 3 + 7).
"""


def input_data():
    n = int(input())
    rooms = [int(x) for x in input().split()]
    m = int(input())
    powers = []
    prices = []
    for _ in range(m):
        power, price = map(int, input().split())
        powers.append(power)
        prices.append(price)
    return n, rooms, m, powers, prices


def slow(n, rooms, m, powers, prices):
    """Решение в лоб"""
    res = 0
    # пробегаемся по всем классам
    for room_power in rooms:
        # выбираем все кондиционера с мощность >= заданной
        # и получаем минимальную цену
        # прибавляем к суммарной стоимости закупок
        res += min(prices[i] for i in range(m) if powers[i] >= room_power)
    return res


def fast(n, rooms, m, powers, prices):
    # максимальное количество ватт, которым обладает кондиционер = 1000
    max_power = 1000
    # Максимальня стоимость кондиционера
    max_price = 1000
    # массив с ценнами в зависимости от мощности
    # через него определяем мминимальную цену для количества ватт
    # по умолчанию для любого уоличества ватт цена будет максимальной
    # потом если мы найдём кондиционер с ценой меньшей, то мы просто изменим цену
    # max_power + 1 - так как минимальная цену кондиционера с мощность max_power
    # будет иметь индекс max_power => длина массива должна быть на 1 больше
    prices_by_power = [max_price] * (max_power+1)
    # Перебираем все кондиционеры, представленные администрации
    # для каждого кондиционера получаем его мощность и цену
    for power, price in zip(powers, prices):
        # нужно определить минимальную цену за количество ватт
        # бывает так что кондиционер с большим количеством ватт стоит МЕНЬШЕ
        # чем кондиционер с меньшим количеством ватт. Чтобы эффективно освоить
        # бюджет, мы будем всегда брать кондиционер с меньшей ценой.
        # Если текущая цена за количество ватт больше чем цены текущего конлиционера
        while power >= 0 and prices_by_power[power] > price:
            # меняем цену
            prices_by_power[power] = price
            # уменьшаяем количество ватт до тех пор пока не дойдём
            # до начала массвиа, или цены меньшей нашей (новой)
            power -= 1

    # таким образом мы собрали массив минимальных ценн за количество ватт
    # зная потребную мощность кондиционера для класса
    # мы можем теперь определить минимальную цену нужного
    # кондиционера для этого случая
    # дальше просто суммируем цены выбранных кондиционеров
    return sum(prices_by_power[room_power] for room_power in rooms)


def solve(n, rooms, m, powers, prices):
    return fast(n, rooms, m, powers, prices)


if __name__ == "__main__":
    n, rooms, m, powers, prices = input_data()
    res = solve(n, rooms, m, powers, prices)
    print(res)
